name: PR Review with DeepSeek

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test-ollama:
    runs-on: ubuntu-latest
    outputs:
      response: ${{ steps.run-model.outputs.response }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR changes
        id: pr-diff
        run: |
          echo "=== Getting PR Changes ==="

          echo "Getting changed files..."
          echo "Changed files:" > pr_changes.txt
          git diff --name-status ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | tee -a pr_changes.txt

          echo -e "\nGetting detailed changes..."
          echo -e "\nDetailed changes:" >> pr_changes.txt
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | tee -a pr_changes.txt

          echo -e "\n=== Full PR Changes Content ==="
          cat pr_changes.txt

          {
            echo 'PR_CHANGES<<EOF'
            cat pr_changes.txt
            echo 'EOF'
          } >> $GITHUB_ENV

      - name: Install Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh

      - name: Read custom prompt
        id: read-prompt
        run: |
          if [ -f ".github/workflows/pr_review_prompt.txt" ]; then
            CUSTOM_PROMPT=$(cat .github/workflows/pr_review_prompt.txt)
          else
            CUSTOM_PROMPT="Please review the following pull request changes and provide feedback."
            echo "Warning: Custom prompt file not found. Using default prompt."
          fi
          echo "CUSTOM_PROMPT=$(echo "$CUSTOM_PROMPT" | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Run DeepSeek model
        id: run-model
        run: |
          # Combine prompt and changes
          echo "$CUSTOM_PROMPT" > full_prompt.txt
          echo -e "\nChanges to review:\n$PR_CHANGES" >> full_prompt.txt

          # Run the model and capture complete response
          response=$(cat full_prompt.txt | ollama run deepseek-r1:1.5b 2>/dev/null |
            grep -v '^[0-9]' |
            grep -v '25[hl]' |
            grep -v '⠙\|⠸\|⠴\|⠦\|⠧\|⠇\|⠏\|⠋\|⠙\|⠹\|⠼' |
            # Escape special characters
            sed 's/[`"'\'']/\\&/g' |
            # Format headings
            sed 's/^###\([^#]\)/### \1/g' |
            sed 's/^####\([^#]\)/#### \1/g' |
            # Format lists
            sed 's/^-\([^ ]\)/- \1/g' |
            # Format bold text
            sed 's/\*\*\([^*]\+\)\*\*/\*\*\1\*\*/g' |
            # Ensure proper line breaks between sections
            sed '/^#/i\\' |
            # Escape any remaining problematic characters
            sed 's/[${}]/\\&/g' |
            # Convert to GitHub Actions compatible format
            tr '\n' '\r' |
            sed 's/\r/\\n/g')

          echo "response=$response" >> $GITHUB_OUTPUT

  comment-on-pr:
    needs: test-ollama
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Comment AI Review on PR
        uses: actions/github-script@v7
        env:
          RESPONSE: ${{ needs.test-ollama.outputs.response }}
        with:
          script: |
            const modelResponse = process.env.RESPONSE || '';
            const cleanResponse = modelResponse
              .replace(/\\n/g, '\n')
              .replace(/[^\x20-\x7E\n]/g, '') // Remove non-printable characters
              .trim();
              
            const aiReview = [
              '# AI Code Review',
              '',
              cleanResponse,
              '',
              '---',
              '*This review was automatically generated by DeepSeek AI.*'
            ].join('\n');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: aiReview
            });